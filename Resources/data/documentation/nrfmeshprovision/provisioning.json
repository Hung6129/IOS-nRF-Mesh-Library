{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision"]]},"abstract":[{"text":"Provisioning is the process of adding an unprovisioned device to a mesh network in a secure way.","type":"text"}],"kind":"article","identifier":{"url":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioning","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"The provisioner, in a secure way, assigns a Unicast Address and sends the Network Key to the device."},{"type":"text","text":" "},{"text":"Knowing the key, the new device, now called a Node, can exchange mesh messages with other nodes.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"To provision a new device, the provisioner does not need to have an address assigned. Having a"},{"type":"text","text":" "},{"text":"Unicast Address makes the provisioner a configuration manager node.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"},{"type":"paragraph","inlineContent":[{"text":"A configuration manager may configure nodes after they have been provisioned.","type":"text"},{"text":" ","type":"text"},{"text":"Configuration messages are sent between ","type":"text"},{"inlineContent":[{"text":"Configuration Client","type":"text"}],"type":"emphasis"},{"text":" model on the manager","type":"text"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"inlineContent":[{"type":"text","text":"Configuration Server"}],"type":"emphasis"},{"text":" model on the target device, and, on the Upper Transport layer, are encrypted","type":"text"},{"type":"text","text":" "},{"text":"using the nodeâ€™s Device Key, generated during provisioning.","type":"text"}]},{"inlineContent":[{"type":"text","text":"To provision a new device, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/provision(unprovisionedDevice:over:)"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let provisioningManager = try meshNetworkManager.provision(","    unprovisionedDevice: unprovisionedDevice, ","    over: bearer",")","provisioningManager.delegate = ...","provisioningManager.logger = ..."],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/UnprovisionedDevice","isActive":true},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/PBGattBearer","type":"reference"},{"type":"text","text":" instances may be created from the"},{"type":"text","text":" "},{"type":"text","text":"Bluetooth LE scan result."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func centralManager(_ central: CBCentralManager, ","                    didDiscover peripheral: CBPeripheral,","                    advertisementData: [String : Any], rssi RSSI: NSNumber) {","    if let unprovisionedDevice = UnprovisionedDevice(advertisementData: advertisementData) {","        let bearer = PBGattBearer(target: peripheral)","        bearer.logger = ...","        bearer.delegate = ...","        bearer.open()","    }","}"]},{"style":"important","name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"nRF Mesh library supports PB GATT Bearer and PB Remote Bearer."},{"text":" ","type":"text"},{"type":"text","text":"PB Adv Bearer is not supported."}]}]},{"type":"paragraph","inlineContent":[{"text":"To provision a device which does not support PB GATT Bearer a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/PBRemoteBearer"},{"type":"text","text":" must be used."},{"text":" ","type":"text"},{"type":"text","text":"A node supporting "},{"inlineContent":[{"type":"text","text":"Remote Provisioning Server"}],"type":"emphasis"},{"type":"text","text":" model must be provisioned and in range of the"},{"text":" ","type":"text"},{"text":"unprovisioned device. All provisioning messages will be sent via that node.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provisioning process is initiated by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager\/identify(andAttractFor:)"}]},{"code":["try provisioningManager.identify(andAttractFor: 2 \/* seconds *\/)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"followed by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager\/provision(usingAlgorithm:publicKey:authenticationMethod:)"},{"type":"text","text":"."}]},{"code":["\/\/ Optional:","provisioningManager.address = ...    \/\/ Defaults to the next available address.","provisioningManager.networkKey = ... \/\/ Defaults to the Primary Network Key.","\/\/ Start:","try provisioningManager.provision(usingAlgorithm:       .BTM_ECDH_P256_HMAC_SHA256_AES_CCM,","                                  publicKey:            ...,","                                  authenticationMethod: ...)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningDelegate"},{"type":"text","text":" should be used to provide OOB (Out Of Band) information."}],"type":"paragraph"}]}],"metadata":{"role":"article","modules":[{"name":"nRFMeshProvision"}],"roleHeading":"Article","title":"Provisioning"},"variants":[{"paths":["\/documentation\/nrfmeshprovision\/provisioning"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Articles","generated":true,"identifiers":["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/LocalNode","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Exporting","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Configuration","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SendingMessages"]}],"references":{"doc://nRFMeshProvision/documentation/nRFMeshProvision/ProvisioningDelegate":{"kind":"symbol","title":"ProvisioningDelegate","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ProvisioningDelegate"}],"navigatorTitle":[{"kind":"identifier","text":"ProvisioningDelegate"}],"abstract":[{"text":"The delegate for receiving provisioning events.","type":"text"}],"role":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningDelegate","url":"\/documentation\/nrfmeshprovision\/provisioningdelegate"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ProvisioningManager/identify(andAttractFor:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager\/identify(andAttractFor:)","title":"identify(andAttractFor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"identify"},{"text":"(","kind":"text"},{"text":"andAttractFor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"This method initializes the provisioning of the device.","type":"text"}],"role":"symbol","url":"\/documentation\/nrfmeshprovision\/provisioningmanager\/identify(andattractfor:)"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/MeshNetworkManager/provision(unprovisionedDevice:over:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"provision"},{"kind":"text","text":"("},{"text":"unprovisionedDevice","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnprovisionedDevice","preciseIdentifier":"c:@M@nRFMeshProvision@objc(cs)UnprovisionedDevice"},{"kind":"text","text":", "},{"kind":"externalParam","text":"over"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16nRFMeshProvision18ProvisioningBearerP","kind":"typeIdentifier","text":"ProvisioningBearer"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16nRFMeshProvision19ProvisioningManagerC","text":"ProvisioningManager"}],"url":"\/documentation\/nrfmeshprovision\/meshnetworkmanager\/provision(unprovisioneddevice:over:)","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/provision(unprovisionedDevice:over:)","abstract":[{"text":"This method returns the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager"},{"text":" that can be used","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to provision the given device."}],"title":"provision(unprovisionedDevice:over:)","kind":"symbol","type":"topic","role":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision":{"url":"\/documentation\/nrfmeshprovision","role":"collection","abstract":[{"type":"text","text":"Provision, configure and control Bluetooth mesh devices with nRF Mesh library."}],"type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision","kind":"symbol","title":"nRFMeshProvision"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/UnprovisionedDevice":{"kind":"symbol","title":"UnprovisionedDevice","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnprovisionedDevice"}],"navigatorTitle":[{"kind":"identifier","text":"UnprovisionedDevice"}],"abstract":[{"text":"A class representing an unprovisioned device.","type":"text"}],"role":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/UnprovisionedDevice","url":"\/documentation\/nrfmeshprovision\/unprovisioneddevice"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/SendingMessages":{"kind":"article","title":"Sending messages","type":"topic","abstract":[{"type":"text","text":"Bluetooth mesh is built on publish-subscribe paradigm. Each node can publish messages and receive messages"},{"text":" ","type":"text"},{"text":"sent by other nodes.","type":"text"}],"role":"article","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SendingMessages","url":"\/documentation\/nrfmeshprovision\/sendingmessages"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Configuration":{"kind":"article","role":"article","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Configuration","title":"Configuration","type":"topic","url":"\/documentation\/nrfmeshprovision\/configuration","abstract":[{"type":"text","text":"Configuration allows to customize the behavior of the local and remote nodes."}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ProvisioningManager/provision(usingAlgorithm:publicKey:authenticationMethod:)":{"kind":"symbol","url":"\/documentation\/nrfmeshprovision\/provisioningmanager\/provision(usingalgorithm:publickey:authenticationmethod:)","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager\/provision(usingAlgorithm:publicKey:authenticationMethod:)","role":"symbol","title":"provision(usingAlgorithm:publicKey:authenticationMethod:)","type":"topic","abstract":[{"type":"text","text":"This method starts the provisioning of the Unprovisioned Device."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"provision"},{"kind":"text","text":"("},{"text":"usingAlgorithm","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16nRFMeshProvision9AlgorithmO","kind":"typeIdentifier","text":"Algorithm"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"publicKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16nRFMeshProvision9PublicKeyO","text":"PublicKey","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"authenticationMethod"},{"kind":"text","text":": "},{"text":"AuthenticationMethod","kind":"typeIdentifier","preciseIdentifier":"s:16nRFMeshProvision20AuthenticationMethodO"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Exporting":{"kind":"article","url":"\/documentation\/nrfmeshprovision\/exporting","title":"Exporting network configuration","abstract":[{"type":"text","text":"Export and import feature allows to share mesh network configuration between"},{"type":"text","text":" "},{"text":"devices.","type":"text"}],"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Exporting","role":"article","type":"topic"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/PBGattBearer":{"kind":"symbol","title":"PBGattBearer","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PBGattBearer"}],"navigatorTitle":[{"kind":"identifier","text":"PBGattBearer"}],"abstract":[{"text":"The PB GATT bearer is responsible for sending and receiving mesh","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provisioning messages to and from the GATT Proxy Node."}],"role":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/PBGattBearer","url":"\/documentation\/nrfmeshprovision\/pbgattbearer"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ProvisioningManager":{"kind":"symbol","title":"ProvisioningManager","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProvisioningManager"}],"navigatorTitle":[{"kind":"identifier","text":"ProvisioningManager"}],"abstract":[{"type":"text","text":"The manager responsible for provisioning a new device into the mesh network."}],"role":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager","url":"\/documentation\/nrfmeshprovision\/provisioningmanager"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/LocalNode":{"kind":"article","title":"Setting up Local Node","type":"topic","abstract":[{"text":"Defining the behavior of the node.","type":"text"}],"role":"article","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/LocalNode","url":"\/documentation\/nrfmeshprovision\/localnode"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/PBRemoteBearer":{"kind":"symbol","title":"PBRemoteBearer","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PBRemoteBearer"}],"navigatorTitle":[{"text":"PBRemoteBearer","kind":"identifier"}],"abstract":[{"text":"Implementation of the PB Remote bearer.","type":"text"}],"role":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/PBRemoteBearer","url":"\/documentation\/nrfmeshprovision\/pbremotebearer"}}}